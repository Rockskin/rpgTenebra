// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RpgTenebra.Models;

namespace RpgTenebra.Migrations
{
    [DbContext(typeof(TenebraContext))]
    [Migration("20201002103028_Add diciplines5")]
    partial class Adddiciplines5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RpgTenebra.Models.Basics.Chapter", b =>
                {
                    b.Property<int>("ChapterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("QuoteId")
                        .HasColumnType("int");

                    b.HasKey("ChapterId");

                    b.HasIndex("QuoteId");

                    b.ToTable("Chapters");
                });

            modelBuilder.Entity("RpgTenebra.Models.Basics.Paragraph", b =>
                {
                    b.Property<int>("ParagraphId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChapterId")
                        .HasColumnType("int");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("ParagraphId");

                    b.HasIndex("ChapterId");

                    b.ToTable("Paragraphs");
                });

            modelBuilder.Entity("RpgTenebra.Models.Basics.Quote", b =>
                {
                    b.Property<int>("QuoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Signature")
                        .IsRequired()
                        .HasColumnType("varchar(2500)");

                    b.HasKey("QuoteId");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("RpgTenebra.Models.Basics.Row", b =>
                {
                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CharacteristicId")
                        .HasColumnType("int");

                    b.Property<int?>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<int?>("DisciplineId1")
                        .HasColumnType("int");

                    b.Property<int?>("DisciplineId2")
                        .HasColumnType("int");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int?>("ParagraphId")
                        .HasColumnType("int");

                    b.Property<int?>("PowerId")
                        .HasColumnType("int");

                    b.Property<int?>("PowerId1")
                        .HasColumnType("int");

                    b.Property<int?>("QuoteId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.HasKey("RowId");

                    b.HasIndex("CharacteristicId");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("DisciplineId1");

                    b.HasIndex("DisciplineId2");

                    b.HasIndex("ParagraphId");

                    b.HasIndex("PowerId");

                    b.HasIndex("PowerId1");

                    b.HasIndex("QuoteId");

                    b.ToTable("Rows");
                });

            modelBuilder.Entity("RpgTenebra.Models.Basics.Table", b =>
                {
                    b.Property<int>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ParagraphId")
                        .HasColumnType("int");

                    b.HasKey("TableId");

                    b.HasIndex("ParagraphId");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("RpgTenebra.Models.VampireM5.Characteristic", b =>
                {
                    b.Property<int>("CharacteristicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BloodResonance")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DangerForTheMasquerade")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("CharacteristicId");

                    b.ToTable("Characteristics");
                });

            modelBuilder.Entity("RpgTenebra.Models.VampireM5.Discipline", b =>
                {
                    b.Property<int>("DisciplineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacteristicId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.HasKey("DisciplineId");

                    b.HasIndex("CharacteristicId");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("RpgTenebra.Models.VampireM5.GlosseryOfTheDamned", b =>
                {
                    b.Property<int>("GodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(750)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("GodId");

                    b.ToTable("GlosseryOfTheDamned");
                });

            modelBuilder.Entity("RpgTenebra.Models.VampireM5.Power", b =>
                {
                    b.Property<int>("PowerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cost")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DicePool")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.HasKey("PowerId");

                    b.ToTable("Powers");
                });

            modelBuilder.Entity("RpgTenebra.Models.Basics.Chapter", b =>
                {
                    b.HasOne("RpgTenebra.Models.Basics.Quote", "Quote")
                        .WithMany()
                        .HasForeignKey("QuoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RpgTenebra.Models.Basics.Paragraph", b =>
                {
                    b.HasOne("RpgTenebra.Models.Basics.Chapter", null)
                        .WithMany("Paragraphs")
                        .HasForeignKey("ChapterId");
                });

            modelBuilder.Entity("RpgTenebra.Models.Basics.Row", b =>
                {
                    b.HasOne("RpgTenebra.Models.VampireM5.Characteristic", null)
                        .WithMany("Description")
                        .HasForeignKey("CharacteristicId");

                    b.HasOne("RpgTenebra.Models.VampireM5.Discipline", null)
                        .WithMany("Description")
                        .HasForeignKey("DisciplineId");

                    b.HasOne("RpgTenebra.Models.VampireM5.Discipline", null)
                        .WithMany("Drama")
                        .HasForeignKey("DisciplineId1");

                    b.HasOne("RpgTenebra.Models.VampireM5.Discipline", null)
                        .WithMany("Powers")
                        .HasForeignKey("DisciplineId2");

                    b.HasOne("RpgTenebra.Models.Basics.Paragraph", null)
                        .WithMany("Rows")
                        .HasForeignKey("ParagraphId");

                    b.HasOne("RpgTenebra.Models.VampireM5.Power", null)
                        .WithMany("Description")
                        .HasForeignKey("PowerId");

                    b.HasOne("RpgTenebra.Models.VampireM5.Power", null)
                        .WithMany("System")
                        .HasForeignKey("PowerId1");

                    b.HasOne("RpgTenebra.Models.Basics.Quote", null)
                        .WithMany("Rows")
                        .HasForeignKey("QuoteId");
                });

            modelBuilder.Entity("RpgTenebra.Models.Basics.Table", b =>
                {
                    b.HasOne("RpgTenebra.Models.Basics.Paragraph", null)
                        .WithMany("Tables")
                        .HasForeignKey("ParagraphId");
                });

            modelBuilder.Entity("RpgTenebra.Models.VampireM5.Discipline", b =>
                {
                    b.HasOne("RpgTenebra.Models.VampireM5.Characteristic", "characteristic")
                        .WithMany()
                        .HasForeignKey("CharacteristicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
