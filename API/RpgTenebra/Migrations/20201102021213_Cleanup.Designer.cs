// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RpgTenebra.Models;

namespace RpgTenebra.Migrations
{
    [DbContext(typeof(TenebraContext))]
    [Migration("20201102021213_Cleanup")]
    partial class Cleanup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RpgTenebra.Models.VampireM5.Characteristic", b =>
                {
                    b.Property<int>("CharacteristicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("CharacteristicId");

                    b.ToTable("Characteristics");
                });

            modelBuilder.Entity("RpgTenebra.Models.VampireM5.CharacteristicRow", b =>
                {
                    b.Property<int>("CharacteristicRowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CharacteristicId")
                        .HasColumnType("int");

                    b.Property<string>("Row")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.HasKey("CharacteristicRowId");

                    b.HasIndex("CharacteristicId");

                    b.ToTable("CharacteristicRows");
                });

            modelBuilder.Entity("RpgTenebra.Models.VampireM5.Discipline", b =>
                {
                    b.Property<int>("DisciplineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharacteristicId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.HasKey("DisciplineId");

                    b.HasIndex("CharacteristicId");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("RpgTenebra.Models.VampireM5.DisciplineRow", b =>
                {
                    b.Property<int>("DisciplineRowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<string>("Row")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.HasKey("DisciplineRowId");

                    b.HasIndex("DisciplineId");

                    b.ToTable("DisciplineRows");
                });

            modelBuilder.Entity("RpgTenebra.Models.VampireM5.DramaRow", b =>
                {
                    b.Property<int>("DramaRowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<string>("Row")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.HasKey("DramaRowId");

                    b.HasIndex("DisciplineId");

                    b.ToTable("DramaRows");
                });

            modelBuilder.Entity("RpgTenebra.Models.VampireM5.GlosseryOfTheDamned", b =>
                {
                    b.Property<int>("GodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(750)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("GodId");

                    b.ToTable("GlosseryOfTheDamned");
                });

            modelBuilder.Entity("RpgTenebra.Models.VampireM5.Power", b =>
                {
                    b.Property<int>("PowerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cost")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DicePool")
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.HasKey("PowerId");

                    b.HasIndex("DisciplineId");

                    b.ToTable("Powers");
                });

            modelBuilder.Entity("RpgTenebra.Models.VampireM5.PowerDescriptionRow", b =>
                {
                    b.Property<int>("DescriptionRowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PowerId")
                        .HasColumnType("int");

                    b.Property<string>("Row")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.HasKey("DescriptionRowId");

                    b.HasIndex("PowerId");

                    b.ToTable("PowerDescriptionRows");
                });

            modelBuilder.Entity("RpgTenebra.Models.VampireM5.PowerSystemRow", b =>
                {
                    b.Property<int>("SystemRowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PowerId")
                        .HasColumnType("int");

                    b.Property<string>("Row")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.HasKey("SystemRowId");

                    b.HasIndex("PowerId");

                    b.ToTable("PowerSystemRows");
                });

            modelBuilder.Entity("RpgTenebra.Models.VampireM5.CharacteristicRow", b =>
                {
                    b.HasOne("RpgTenebra.Models.VampireM5.Characteristic", null)
                        .WithMany("Description")
                        .HasForeignKey("CharacteristicId");
                });

            modelBuilder.Entity("RpgTenebra.Models.VampireM5.Discipline", b =>
                {
                    b.HasOne("RpgTenebra.Models.VampireM5.Characteristic", "Characteristic")
                        .WithMany()
                        .HasForeignKey("CharacteristicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RpgTenebra.Models.VampireM5.DisciplineRow", b =>
                {
                    b.HasOne("RpgTenebra.Models.VampireM5.Discipline", null)
                        .WithMany("Description")
                        .HasForeignKey("DisciplineId");
                });

            modelBuilder.Entity("RpgTenebra.Models.VampireM5.DramaRow", b =>
                {
                    b.HasOne("RpgTenebra.Models.VampireM5.Discipline", null)
                        .WithMany("Drama")
                        .HasForeignKey("DisciplineId");
                });

            modelBuilder.Entity("RpgTenebra.Models.VampireM5.Power", b =>
                {
                    b.HasOne("RpgTenebra.Models.VampireM5.Discipline", null)
                        .WithMany("Powers")
                        .HasForeignKey("DisciplineId");
                });

            modelBuilder.Entity("RpgTenebra.Models.VampireM5.PowerDescriptionRow", b =>
                {
                    b.HasOne("RpgTenebra.Models.VampireM5.Power", null)
                        .WithMany("Description")
                        .HasForeignKey("PowerId");
                });

            modelBuilder.Entity("RpgTenebra.Models.VampireM5.PowerSystemRow", b =>
                {
                    b.HasOne("RpgTenebra.Models.VampireM5.Power", null)
                        .WithMany("System")
                        .HasForeignKey("PowerId");
                });
#pragma warning restore 612, 618
        }
    }
}
